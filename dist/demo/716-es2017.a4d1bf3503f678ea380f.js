(self.webpackChunkngx_markdown=self.webpackChunkngx_markdown||[]).push([[716],{1023:function(n,e,t){"use strict";t.r(e),t.d(e,{BindingsModule:function(){return u}});var o=t(1041),a=t(9550),i=t(4944),r=t(9136),p=t(8483),s=t(2561),d=t(5366),m=t(9299),c=t(5965),l=t(3070);const g=[{path:"",component:(()=>{class n{constructor(n){this.elementRef=n,this.demoPython=t(1107).Z,this.languagePipe=t(4679).Z,this.markdown='### Markdown example\n---\nThis is an **example** where we bind a variable to the `markdown` component that is also bind to a textarea.\n\n#### example.component.ts\n```typescript\npublic markdown = "# Markdown";\n```\n\n#### example.component.html\n```html\n<textarea [(ngModel)]="markdown"></textarea>\n<markdown [data]="markdown"></markdown>\n```',this.typescriptMarkdown="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'markdown-demo',\n  templateUrl: './markdown-demo.component.html',\n  styleUrls: ['./markdown-demo.component.scss'],\n})\nexport class MarkdownDemoComponent {\n  public pipeMarkdown = '# Markdown';\n}"}ngOnInit(){this.setHeadings()}setHeadings(){const n=[];this.elementRef.nativeElement.querySelectorAll("h2").forEach(e=>n.push(e)),this.headings=n}}return n.\u0275fac=function(e){return new(e||n)(d.Y36(d.SBq))},n.\u0275cmp=d.Xpm({type:n,selectors:[["app-bindings"]],decls:46,vars:19,consts:[[3,"headings"],["id","remote-url"],[3,"src"],["markdown","",3,"src"],["id","variable-binding"],["fxLayout","column","fxLayout.gt-sm","row","fxLayoutGap","16px"],["appearance","fill","color","accent","fxFlex.gt-sm","calc(50% - 8px)"],["matInput","",3,"ngModel","ngModelChange"],["fxFlex.gt-sm","calc(50% - 8px)",3,"data"],["id","pipe-usage"],["fxFlex.gt-sm","calc(50% - 8px)",3,"innerHTML"]],template:function(n,e){1&n&&(d.TgZ(0,"app-scrollspy-nav-layout",0),d.TgZ(1,"h1"),d._uU(2,"Bindings"),d.qZA(),d.TgZ(3,"section"),d.TgZ(4,"h2",1),d._uU(5,"Remote Url"),d.qZA(),d.TgZ(6,"markdown"),d._uU(7," Using component with `src` property to fetch remote markdown file `app/bindings/remote/demo.md` "),d.qZA(),d._UZ(8,"markdown",2),d.TgZ(9,"markdown"),d._uU(10," Using component with static `python` code block "),d.qZA(),d.TgZ(11,"markdown"),d._uU(12),d.ALo(13,"language"),d.qZA(),d.TgZ(14,"markdown"),d._uU(15," Using directive with `src` property to fetch remote html file `app/bindings/remote/demo.html` "),d.qZA(),d._UZ(16,"div",3),d.TgZ(17,"markdown"),d._uU(18," Using directive with `src` property to fetch remote C++ file `app/bindings/remote/demo.cpp` "),d.qZA(),d._UZ(19,"div",3),d.qZA(),d.TgZ(20,"section"),d.TgZ(21,"h2",4),d._uU(22,"Variable Binding"),d.qZA(),d.TgZ(23,"markdown"),d._uU(24," Using component or directive with `data` property allow to bind a variable that will update the DOM when value changes "),d.qZA(),d.TgZ(25,"div",5),d.TgZ(26,"mat-form-field",6),d.TgZ(27,"textarea",7),d.NdJ("ngModelChange",function(n){return e.markdown=n}),d.qZA(),d.qZA(),d._UZ(28,"markdown",8),d.qZA(),d.TgZ(29,"markdown"),d._uU(30," Using `language` pipe you can specify the language of the variable content for synthax highlights "),d.qZA(),d._UZ(31,"markdown",2),d.qZA(),d.TgZ(32,"section"),d.TgZ(33,"h2",9),d._uU(34,"Pipe Usage"),d.qZA(),d.TgZ(35,"markdown"),d._uU(36," Using `markdown` pipe to transform markdown to HTML allow you to chain pipe transformations and will update the DOM when value changes "),d.qZA(),d._UZ(37,"markdown",2),d.TgZ(38,"markdown"),d._uU(39," In the following example using the synthax above, `typescriptMarkdown` property does not contain any `back-ticks` to set the content language but will be chain with `language` pipe instead to specify synthax highlights language along with `markdown` pipe for conversion "),d.qZA(),d.TgZ(40,"div",5),d.TgZ(41,"mat-form-field",6),d.TgZ(42,"textarea",7),d.NdJ("ngModelChange",function(n){return e.typescriptMarkdown=n}),d.qZA(),d.qZA(),d._UZ(43,"div",10),d.ALo(44,"markdown"),d.ALo(45,"language"),d.qZA(),d.qZA(),d.qZA()),2&n&&(d.Q6J("headings",e.headings),d.xp6(8),d.Q6J("src","app/bindings/remote/demo.md"),d.xp6(4),d.Oqu(d.xi3(13,11,e.demoPython,"python")),d.xp6(4),d.Q6J("src","app/bindings/remote/demo.html"),d.xp6(3),d.Q6J("src","app/bindings/remote/demo.cpp"),d.xp6(8),d.Q6J("ngModel",e.markdown),d.xp6(1),d.Q6J("data",e.markdown),d.xp6(3),d.Q6J("src","app/bindings/remote/language-pipe.html"),d.xp6(6),d.Q6J("src","app/bindings/remote/markdown-pipe.html"),d.xp6(5),d.Q6J("ngModel",e.typescriptMarkdown),d.xp6(1),d.Q6J("innerHTML",d.lcZ(44,14,d.xi3(45,16,e.typescriptMarkdown,"typescript")),d.oJD))},directives:[m.c,i.lF,c.xw,c.SQ,l.KE,c.yH,a.Nt,o.Fj,o.JJ,o.On],pipes:[i.Ay,i.NO],styles:["[_nghost-%COMP%]{display:block}textarea[_ngcontent-%COMP%]{min-height:360px}"],changeDetection:0}),n})()}];let h=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=d.oAB({type:n}),n.\u0275inj=d.cJS({imports:[[s.Bz.forChild(g)],s.Bz]}),n})(),u=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=d.oAB({type:n}),n.\u0275inj=d.cJS({imports:[[h,o.u5,i.JP.forChild(),a.c,r.U,p.m]]}),n})()},1107:function(n,e){"use strict";e.Z='s = "Python syntax highlighting"\nprint s'},4679:function(n,e){"use strict";e.Z="<markdown [data]=\"markdown | language : 'typescript'\"></markdown>"}}]);